from RSAExploits.exploits import wiener
from Crypto.PublicKey import RSA

def set_RSAobj(n,e,d=None,p=None,q=None):
	if n != None and e != None and d == None and p == None and q == None:
		key = RSA.construct((n, e))
	elif n != None and e != None and d != None and p == None and q == None:
		key = RSA.construct((n, e, d))
	elif n != None and e != None and d != None and p != None and q == None:
		key = RSA.construct((n, e, d, p))
	elif n != None and e != None and d != None and p != None and q != None:
		key = RSA.construct((n, e, d, p, q))	
	return key 	

def encrypt(key, pt):	
	return key.encrypt(pt, 1L)

def decrypt(key, ct):
	return key.decrypt(ct)

def sign(key, pt):
	return key.sign(pt,1L)

def verify(key, m, sg):
	return key.verify(m, sg)


