from Crypto.PublicKey import RSA

def set_RSAobj(n,e,d=None,p=None,q=None):
	if n != None and e != None and d == None and p == None and q == None:
		rsa = RSA.construct((n, e))
	elif n != None and e != None and d != None and p == None and q == None:
		rsa = RSA.construct((n, e, d))
	elif n != None and e != None and d != None and p != None and q == None:
		rsa = RSA.construct((n, e, d, p))
	elif n != None and e != None and d != None and p != None and q != None:
		rsa = RSA.construct((n, e, d, p, q))	
	return rsa 	

def encrypt(rsa, pt):	
	return rsa.encrypt(pt, 1L)

def decrypt(rsa, ct):
	return rsa.decrypt(ct)

def sign(rsa, pt):
	return rsa.sign(pt,1L)

def verify(rsa, m, sg):
	return rsa.verify(m, sg)


